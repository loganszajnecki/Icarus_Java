// glsl shader that gets run for each vertex in the model (4 times in our case)
#version 400 core

in vec3 position;
in vec2 textureCoords;

out vec2 pass_textureCoords;

// uniforms 
uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;

void main(void) {

	gl_Position = projectionMatrix * viewMatrix * transformationMatrix * vec4(position, 1.0); // where on the screen to render the incoming vertex
	pass_textureCoords = textureCoords;
}